{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Section","title","children","className","s","section","Statistics","good","neutral","bad","total","positivePercentage","list","item","FeedbackOptions","onLeaveFeedback","id","btn","type","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","Math","ceil","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,gBCAzDD,EAAOC,QAAU,CAAC,IAAM,+B,kBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,sICYbC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCeQI,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIR,UAAWC,IAAEQ,KAAjB,UACE,qBAAIT,UAAWC,IAAES,KAAjB,mBAA8BN,KAC9B,qBAAIJ,UAAWC,IAAES,KAAjB,sBAAiCL,KACjC,qBAAIL,UAAWC,IAAES,KAAjB,kBAA6BJ,KAC7B,qBAAIN,UAAWC,IAAES,KAAjB,oBAA+BH,KAC/B,qBAAIP,UAAWC,IAAES,KAAjB,gCAA2CF,EAA3C,W,gBCyBSG,EAhCS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,gCACE,wBACEC,GAAG,OACHb,UAAWC,IAAEa,IACbC,KAAK,SACLC,QAASJ,EAJX,kBAQA,wBACEC,GAAG,UACHb,UAAWC,IAAEa,IACbC,KAAK,SACLC,QAASJ,EAJX,qBASA,wBACEZ,UAAWC,IAAEa,IACbD,GAAG,MACHE,KAAK,SACLC,QAASJ,EAJX,qBCZSK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCEE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOd,EAAP,KAAYiB,EAAZ,KAiBMC,EAAqB,kBAAMpB,EAAOC,EAAUC,GAKlD,OACE,qCACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBc,gBAvBH,SAACa,GACnB,OAAQA,EAAEC,OAAOb,IACf,IAAK,OACHQ,EAAQjB,EAAO,GACf,MACF,IAAK,UACHkB,EAAWjB,EAAU,GACrB,MACF,IAAK,MACHkB,EAAOjB,EAAM,GACb,MACF,QACE,aAaF,cAAC,EAAD,CAASR,MAAM,aAAf,SAC4B,IAAzB0B,IACC,cAAC,EAAD,CACEpB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,IACPhB,mBAdRmB,KAAKC,KAAMxB,GAAQA,EAAOC,EAAUC,GAAQ,OAiBtC,cAAC,EAAD,CAAcY,QAAQ,2BCzChCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACZ,EAAD,MAEFa,SAASC,eAAe,W","file":"static/js/main.96e13eb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__yo4GA\",\"item\":\"Statistics_item__GKGuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2NM5o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2tUQ9\"};","import React from \"react\";\nimport s from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral}</li>\n      <li className={s.item}>Bad: {bad}</li>\n      <li className={s.item}>Total: {total}</li>\n      <li className={s.item}>Positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport s from \"../FeedbackOptions/FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <div>\n      <button\n        id=\"good\"\n        className={s.btn}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        Good\n      </button>\n      <button\n        id=\"neutral\"\n        className={s.btn}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n\n      <button\n        className={s.btn}\n        id=\"bad\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        Bad\n      </button>\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { useState } from \"react\";\nimport Section from \"../Section/Section\";\nimport Statistics from \"../Statistics/Statistics\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Notification from \"../Notification/Notification\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = (e) => {\n    switch (e.target.id) {\n      case \"good\":\n        setGood(good + 1);\n        break;\n      case \"neutral\":\n        setNeutral(neutral + 1);\n        break;\n      case \"bad\":\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n  const countTotalFeedback = () => good + neutral + bad;\n\n  const countPositiveFeedbackPersentage = () =>\n    Math.ceil((good / (good + neutral + bad)) * 100);\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={addFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPersentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}